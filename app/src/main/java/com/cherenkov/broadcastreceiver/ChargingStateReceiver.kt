package com.cherenkov.broadcastreceiver

import android.app.NotificationChannel
import android.app.NotificationManager
import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.os.Build
import android.util.Log
import android.widget.Toast
import androidx.core.app.NotificationCompat
import kotlin.random.Random


//–ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ—Å–∏–≤–µ—Ä–∞ –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞—Ä—è–∂–∞–µ—Ç—Å—è –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—Ä—è–¥–∫–µ
class ChargingStateReceiver : BroadcastReceiver() {

    override fun onReceive(context: Context, intent: Intent?) {
        val action = intent?.action ?: return
        Log.d("ChargingReceiver", "Received action: $action")

        val isCharging = when (action) {
            Intent.ACTION_POWER_CONNECTED -> true
            Intent.ACTION_POWER_DISCONNECTED -> false
            else -> return
        }
        Toast.makeText(context, "–†–µ—Å–∏–≤–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª!", Toast.LENGTH_SHORT).show()
        showNotification(context, isCharging)
    }

    private fun showNotification(context: Context, isCharging: Boolean) {
        val channelId = "charging_channel"
        val notificationManager = context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

        val channel = NotificationChannel(
            channelId,
            "–ó–∞—Ä—è–¥–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞",
            NotificationManager.IMPORTANCE_HIGH
        ).apply {
            description = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏/–æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∑–∞—Ä—è–¥–∫–∏"
        }
        notificationManager.createNotificationChannel(channel)

        // –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        val title = if (isCharging) "üîå –ó–∞—Ä—è–¥–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞" else "üîã –ó–∞—Ä—è–¥–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞"
        val notification = NotificationCompat.Builder(context, channelId)
            .setContentTitle(title)
            .setSmallIcon(android.R.drawable.ic_dialog_info)
            .setPriority(NotificationCompat.PRIORITY_HIGH) // –î–ª—è API < 26
            .setAutoCancel(true)
            .build()

        // –ü–æ–∫–∞–∂–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notificationManager.notify(Random.nextInt(100), notification)
    }
}